trigger:
  branches:
    include:
      - master
  paths:
    include:
      - build/infrastructure/azure-kubernetes-service/*

pr:
  branches:
    include:
      - master
      - feat/*
      - fix/*
      - chore/*
      - refactor/*
  paths:
    include:
      - build/infrastructure/azure-kubernetes-service/*

stages:
  - stage: Deploy
    displayName: 'Deploy'
    jobs:
      - job: Deploy
        displayName: 'Deploy Cluster'
        pool:
          vmImage: 'ubuntu-latest'

        variables:
          resourceGroupName: 'kubernetes-playground-test-rg'
          location: 'South Africa North'

        steps:
        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Deploy AKS Cluster ARM Template'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'MyARMConnection'
            subscriptionId: '$(subscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(resourceGroupName)'
            location: '$(location)'
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/azure-kubernetes-service/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/azure-kubernetes-service/azuredeploy.parameters.json'
            deploymentMode: 'Incremental'

  - stage: PostDeploy
    displayName: 'Post Deploy'
    jobs:
      - job: 'InstallClusterPrerequisites'
        displayName: 'Install Cluster Prerequisites'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
        - task: HelmDeploy@0
          displayName: 'Add ingress-nginx Helm Repo'
          enabled: true
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            command: 'repo'
            arguments: 'add ingress-nginx https://kubernetes.github.io/ingress-nginx'

        - task: HelmDeploy@0
          displayName: 'Add jetstack Helm Repo'
          enabled: true
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            command: 'repo'
            arguments: 'add jetstack https://charts.jetstack.io'
  
        - task: HelmDeploy@0
          displayName: 'Add csi-secrets-store-provider-azure Helm Repo'
          enabled: true
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            command: 'repo'
            arguments: 'add csi-secrets-store-provider-azure https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/charts'

        - task: HelmDeploy@0
          displayName: 'Add aad-pod-identity Helm Repo'
          enabled: true
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            command: 'repo'
            arguments: 'add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts'

        - task: HelmDeploy@0
          displayName: 'Update Helm Repos'
          enabled: true
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            command: 'repo'
            arguments: 'update'

        - task: HelmDeploy@0
          displayName: 'Install ingress-nginx'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'infrastructure'
            command: 'upgrade'
            arguments: '--create-namespace'
            chartType: 'Name'
            chartName: 'ingress-nginx/ingress-nginx'
            releaseName: 'ingress-nginx'

        - task: HelmDeploy@0
          displayName: 'Install cert-manager'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'infrastructure'
            command: 'upgrade'
            chartType: 'Name'
            chartName: ' jetstack/cert-manager'
            releaseName: 'cert-manager'
            arguments: >-
              --create-namespace
              --set installCRDs=true

        - task: HelmDeploy@0
          displayName: 'Install csi-secrets-store-provider-azure'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'infrastructure'
            command: 'upgrade'
            arguments: '--create-namespace'
            chartType: 'Name'
            chartName: 'csi-secrets-store-provider-azure/csi-secrets-store-provider-azure'
            releaseName: 'csi-secrets-store-provider-azure'

        - task: HelmDeploy@0
          displayName: 'Install aad-pod-identity'
          continueOnError: true # Temporary fix until v 1.6.2 of aad-pod-identity is released: https://github.com/Azure/aad-pod-identity/issues/626
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'infrastructure'
            command: 'upgrade'
            arguments: '--create-namespace'
            chartType: 'Name'
            chartName: 'aad-pod-identity/aad-pod-identity'
            releaseName: 'aad-pod-identity'

        - task: HelmDeploy@0
          displayName: 'Create Test Environment Cluster Issuer'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'test-env'
            command: 'upgrade'
            chartType: 'FilePath'
            chartPath: 'build/infrastructure/azure-kubernetes-service/charts/issuer-chart'
            releaseName: 'staging-cluster-issuer'
            arguments: >-
              --create-namespace
              --set clusterIssuerName=letsencrypt-staging
              --set acmeServer=$(testEnvAcmeServer)
              --set acmeEmail=$(testEnvAcmeEmail)
  
        - task: HelmDeploy@0
          displayName: 'Create Prod Environment Cluster Issuer'
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscription: 'MyARMConnection'
            azureResourceGroup: 'kubernetes-playground-test-rg'
            kubernetesCluster: 'aks-cluster'
            namespace: 'prod-env'
            command: 'upgrade'
            chartType: 'FilePath'
            chartPath: 'build/infrastructure/azure-kubernetes-service/charts/issuer-chart'
            releaseName: 'prod-cluster-issuer'
            arguments: >-
              --create-namespace
              --set clusterIssuerName=letsencrypt-prod
              --set acmeServer=$(prodEnvAcmeServer)
              --set acmeEmail=$(prodEnvAcmeEmail)