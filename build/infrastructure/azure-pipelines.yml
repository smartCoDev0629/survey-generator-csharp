stages:
  - stage: Provisioning
    displayName: 'Provisioning'
    jobs:
      - job: Provisioning
        displayName: 'Provision Infrastructure'
        pool:
          vmImage: 'ubuntu-latest'

        variables:
          azureResourceManagerConnection: 'Azure Service Connection'
          resourceGroupName: 'rg-fake-survey-generator'
          location: 'South Africa North'
          dnsZoneName: mysecondarydomain.com
          externalDnsIdentityName: mi-external-dns
          certManagerIdentityName: mi-cert-manager

        steps:
        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create Resource Group'
          inputs:
            deploymentScope: 'Subscription'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: '$(subscriptionId)'
            location: '$(location)'
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/resource-group/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/resource-group/azuredeploy.parameters.json'
            deploymentMode: 'Incremental'
            overrideParameters: >-
              -resourceGroupName "$(resourceGroupName)"
              -location "$(location)"

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create DNS Zone'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/dns-zone/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/dns-zone/azuredeploy.parameters.json'
            overrideParameters: >-
              -dnsZoneName "$(dnsZoneName)"
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create Key Vault'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/azure-key-vault/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/azure-key-vault/azuredeploy.parameters.json'
            overrideParameters: >-
              -tenantId "$(tenantId)"
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create Container Registry'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/azure-container-registry/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/azure-container-registry/azuredeploy.parameters.json'
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create Redis Cache'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/azure-redis-cache/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/azure-redis-cache/azuredeploy.parameters.json'
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create SQL Server & Database'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/azure-sql/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/azure-sql/azuredeploy.parameters.json'
            overrideParameters: >-
              -administratorLogin "$(sqlDatabaseAdminLogin)"
              -administratorLoginPassword "$(sqlDatabaseAdminLoginPassword)"
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create AKS Managed Identities'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Azure Service Connection'
            subscriptionId: $(subscriptionId)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: 'build/infrastructure/aks-managed-identities/azuredeploy.json'
            csmParametersFile: 'build/infrastructure/aks-managed-identities/azuredeploy.parameters.json'
            overrideParameters: >-
              -dnsZoneName "$(dnsZoneName)"
            deploymentMode: 'Incremental'
            deploymentOutputs: createManagedIdentitiesArmOutput
  
        - task: PowerShell@2
          name: 'SetOutputVariables'
          displayName: 'Set Output Variables'
          inputs:
            targetType: 'inline'
            script: |
              $armOutputObj = '$(createManagedIdentitiesArmOutput)' | ConvertFrom-Json
              $armOutputObj.PSObject.Properties | ForEach-Object {
                $keyname = $_.Name
                $value = $_.Value.value
            
                ## Creates a standard pipeline variable
                Write-Output "##vso[task.setvariable variable=$keyName;]$value"
                
                ## Creates an output variable
                Write-Output "##vso[task.setvariable variable=$keyName;isOutput=true]$value"
              }
            pwsh: true